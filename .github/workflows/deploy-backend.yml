name: Deploy to AWS ECS

on:
  push:
    branches:
      - release
      - test

env:
  AWS_REGION: "us-east-1"
  ECR_REPOSITORY: "433946623370.dkr.ecr.us-east-1.amazonaws.com/kidomo"
  CLUSTER_NAME: "kidomo"
  PROD_SERVICE_NAME: "kidomo-prod"
  TEST_SERVICE_NAME: "kidomo-test"
  DOCKER_COMPOSE_PROD: "docker-compose.yml"
  DOCKER_COMPOSE_TEST: "docker-compose.test.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract branch name
        id: extract_branch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"

      - name: Set environment variables based on branch
        id: set-env-vars
        run: |
          if [ "${{ steps.extract_branch.outputs.branch }}" == "release" ]; then
            echo "::set-output name=compose_file::$DOCKER_COMPOSE_PROD"
            echo "::set-output name=service_name::$PROD_SERVICE_NAME"
          else
            echo "::set-output name=compose_file::$DOCKER_COMPOSE_TEST"
            echo "::set-output name=service_name::$TEST_SERVICE_NAME"
          fi

      - name: Build and push Docker images
        run: |
          docker-compose -f ${{ steps.set-env-vars.outputs.compose_file }} build
          docker-compose -f ${{ steps.set-env-vars.outputs.compose_file }} push

      - name: Deploy to ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: $AWS_REGION
          CLUSTER_NAME: $CLUSTER_NAME
          SERVICE_NAME: ${{ steps.set-env-vars.outputs.service_name }}
          COMPOSE_FILE: ${{ steps.set-env-vars.outputs.compose_file }}
          MONGO_ROOT_USER: ${{ secrets.MONGO_ROOT_USER }}
          MONGO_ROOT_PASSWORD: ${{ secrets.MONGO_ROOT_PASSWORD }}
          MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          TASK_SERVICE_PORT: ${{ vars.TASK_SERVICE_PORT }}
          TOKEN_SERVICE_PORT: ${{ vars.TOKEN_SERVICE_PORT }}
          MAILER_SERVICE_PORT: ${{ vars.MAILER_SERVICE_PORT }}
          PERMISSION_SERVICE_PORT: ${{ vars.PERMISSION_SERVICE_PORT }}
          USER_SERVICE_PORT: ${{ vars.USER_SERVICE_PORT }}
          GATEWAY_SERVICE_PORT: ${{ vars.GATEWAY_SERVICE_PORT }}
        run: |
          ecs-cli configure --cluster $CLUSTER_NAME --region $AWS_REGION
          ecs-cli compose --file $COMPOSE_FILE service up --create-log-groups --cluster-config $CLUSTER_NAME
          ecs-cli compose --file $COMPOSE_FILE service start --cluster-config $CLUSTER_NAME
